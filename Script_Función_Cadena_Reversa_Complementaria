####Programa para crear una función que genere cadena complementaria a una seq de ADN####

# Crear función
def Crear_reversa_complementaria(secuencia):
    complementario = { "A":"T", "T":"A", "C":"G", "G":"C" }
    seq_rev = []
    for nucleotido in reversed(secuencia):
        nucleotido_comp = complementario[nucleotido]
        seq_rev.append(nucleotido_comp)
    seq_rev= "".join(seq_rev)
    return seq_rev
#ln 4- La función "def" crea funciones. Va seguida del nombre de la función, la cuál se aplicara sobre un objeto.
    #ln 5- Asignamos un diccionario "{}"" al objeto "complementario". Dentro del diccionario asignamos equivalencias 
        # con ":" y separamos con "," los terminos o definiciones. 
    #ln 6- "seq_rev" será una lista, en la que iremos agregando uno a uno los nucleotidos complementarios. Lo 
        # dejamos como una lista "[]" indefinida por ahora.
    #ln 7- "for" Inicia ciclo!, en este cada nucleotido del objeto al que se le aplica la función (la secuencia original)
        # se leera en orden reverso gracias a la funcción "reversed". Importante poner el ":" después del "for".
        #ln 8- Se crea un nucleotido complementario a cada nucleotido asignandole un valor del diccionario "complementario"    
        #ln 9- Mediante el ".append" se agrega el nucleotido complementario reverso a la lista "seq_rev"
        # Termina el ciclo!
    #ln 10- Mediante ".join" recreamos el objeto "seq_rev" tal que sea un objeto y en formato texto por el "" en vez de una lista
    #ln 11- "return" significa que la función nos dará como outpot "seq_rev" al aplicarse sobre un objeto.

# Introducir una secuencia de ADN
seq1 = "AAATTTCCCGGG"
print(Crear_reversa_complementaria(seq1))
